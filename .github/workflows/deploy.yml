name: Deploy to ECS

on:
  push:
    branches:
      - main
  workflow_dispatch:  # This allows manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Install Dependencies
        run: pip install --no-cache-dir dvc[s3]

      - name: Pull Data & Artifacts
        run: dvc pull artifacts -q

      - name: Build Docker Image
        run: |
          docker build -t fraud-detection-api .
          docker tag fraud-detection-api:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/fraud-detection-api:latest

      - name: Push Docker Image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/fraud-detection-api:latest

      - name: Update ECS Service
        run: |
          aws ecs update-service \
            --cluster fraud-detection-cluster \
            --service fraud-detection-service \
            --force-new-deployment \
            --region ${{ secrets.AWS_REGION }}
